apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    Properties versionProps = loadProperties('version.properties')
    def versionCodeProperty = versionProps['VERSION_CODE'].toInteger()
    defaultConfig {
        applicationId "com.vaxapp.thingspeakviewer"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionCodeProperty
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('debug-key/debug.keystore')
            storePassword 'android'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFile 'proguard-files/proguard-rules.pro'
            proguardFile 'proguard-files/proguard-gson.pro'
            proguardFile 'proguard-files/proguard-rxjava.pro'
            proguardFile 'proguard-files/proguard-square-retrofit.pro'
            proguardFile 'proguard-files/proguard-support-v7-appcompat.pro'
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

private Properties loadProperties(String fileName) {
    Properties versionProps = new Properties()
    def versionPropsFile = file(fileName)
    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    } else {
        throw new GradleException("Could not read ".fileName)
    }
    versionProps
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    def appDependencies = rootProject.ext.appDependencies
    def testDependencies = rootProject.ext.testDependencies
    def androidTestDependencies = rootProject.ext.androidTestDependencies

    implementation appDependencies.kotlin
    implementation appDependencies.appCompat
    implementation appDependencies.rxAndroid
    implementation appDependencies.vectorDrawable
    implementation appDependencies.recyclerView
    implementation appDependencies.design
    implementation appDependencies.constraintLayout
    implementation appDependencies.anko
    implementation appDependencies.koin
    implementation appDependencies.koinAndroid
    implementation appDependencies.retrofit
    implementation appDependencies.adapterRxJava
    implementation appDependencies.converterGson
    implementation appDependencies.okHttp
    implementation(appDependencies.crashlytics) {
        transitive = true;
    }

    testImplementation testDependencies.jUnit

    androidTestImplementation androidTestDependencies.supportTestRunner
    androidTestImplementation androidTestDependencies.espressoCore
}
